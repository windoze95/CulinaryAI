<!DOCTYPE html>
<html>

<head>
    {{ template "head" . }}
    <style>
        /* Hide the second page by default */
        /* #mfa-section {
            display: none;
        } */

        #signup-form {
            padding-bottom: 2.3733333333rem;
        }

        #signup-form h2 {
            margin: 0;
            padding: 2.3733333333rem 0 1.424rem 0;
        }

        /* Style for indicating valid and invalid input */
        input.valid,
        input.valid:focus,
        input.valid:active,
        input.valid:hover {
            /* background-color: #d4edda !important; */
            border-bottom-color: rgb(54, 125, 57) !important;
            box-shadow: rgb(61, 140, 64) 0px 1px 0px 0px !important;
        }

        label.valid,
        label.valid:focus,
        label.valid:active,
        label.valid:hover {
            /* color: rgb(54, 125, 57) !important; */
            color: #9e9e9e !important;
        }

        input.invalid,
        input.invalid:focus,
        input.invalid:active,
        input.invalid:hover {
            /* background-color: #f8d7da; */
            border-bottom-color: rgb(157, 19, 9) !important;
            box-shadow: rgb(169, 20, 9) 0px 1px 0px 0px !important;
        }

        label.invalid,
        label.invalid:focus,
        label.invalid:active,
        label.invalid:hover {
            /* color: rgb(157, 19, 9) !important; */
            color: #9e9e9e !important;
        }

        input:not([type]):focus.valid~label,
        input[type=text]:not(.browser-default):focus.valid~label,
        input[type=password]:not(.browser-default):focus.valid~label,
        input[type=email]:not(.browser-default):focus.valid~label,
        input[type=url]:not(.browser-default):focus.valid~label,
        input[type=time]:not(.browser-default):focus.valid~label,
        input[type=date]:not(.browser-default):focus.valid~label,
        input[type=datetime]:not(.browser-default):focus.valid~label,
        input[type=datetime-local]:not(.browser-default):focus.valid~label,
        input[type=tel]:not(.browser-default):focus.valid~label,
        input[type=number]:not(.browser-default):focus.valid~label,
        input[type=search]:not(.browser-default):focus.valid~label,
        textarea.materialize-textarea:focus.valid~label,
        input:not([type]):focus.invalid~label,
        input[type=text]:not(.browser-default):focus.invalid~label,
        input[type=password]:not(.browser-default):focus.invalid~label,
        input[type=email]:not(.browser-default):focus.invalid~label,
        input[type=url]:not(.browser-default):focus.invalid~label,
        input[type=time]:not(.browser-default):focus.invalid~label,
        input[type=date]:not(.browser-default):focus.invalid~label,
        input[type=datetime]:not(.browser-default):focus.invalid~label,
        input[type=datetime-local]:not(.browser-default):focus.invalid~label,
        input[type=tel]:not(.browser-default):focus.invalid~label,
        input[type=number]:not(.browser-default):focus.invalid~label,
        input[type=search]:not(.browser-default):focus.invalid~label,
        textarea.materialize-textarea:focus.invalid~label {
            color: #9e9e9e !important;
        }
    </style>
    <script>
        function validatePassword(password) {
            var hasUppercase = /[A-Z]/.test(password);
            var hasLowercase = /[a-z]/.test(password);
            var hasNumber = /\d/.test(password);
            var hasSpecialChar = /[!@#$%^&*]/.test(password);

            return password.length >= 8 && hasUppercase && hasLowercase && hasNumber && hasSpecialChar;
        }

        function validateSignupFields() {
            var username = document.getElementById('username');
            var password = document.getElementById('password');
            var confirmPassword = document.getElementById('confirm-password');
            var submitButton = document.getElementById('signup-submit');

            var usernameLabel = document.getElementById('username-label');
            var passwordLabel = document.getElementById('password-label');
            var confirmPasswordLabel = document.getElementById('confirm-password-label');

            var isValid = true;  // Track the validity of all fields

            // Check that the username is long enough
            if (username.value.length < 3) {
                username.className = 'invalid';
                usernameLabel.className = 'invalid';
                isValid = false;
            } else {
                username.className = 'valid';
                usernameLabel.className = 'valid';
            }

            if (password.value !== "" || confirmPassword.value !== "") {
                // Check that the password is validated
                var isValidated = validatePassword(password.value)

                if (isValidated) {
                    password.className = 'valid';
                    passwordLabel.className = 'valid';
                } else {
                    password.className = 'invalid';
                    passwordLabel.className = 'invalid';
                    isValid = false;
                }

                // Check that the passwords are valid and match
                if (isValidated && password.value === confirmPassword.value) {
                    confirmPassword.className = 'valid';
                    confirmPasswordLabel.className = 'valid';
                } else {
                    confirmPassword.className = 'invalid';
                    confirmPasswordLabel.className = 'invalid';
                    isValid = false;
                }

                // Set the disabled property of the submit button based on the validity of all fields
                submitButton.disabled = !isValid;
            }
        }
    </script>
</head>

<body>
    <header>
        {{ template "header" . }}
    </header>

    <div class="container">
        <h2>Create an account</h2>
        <form id="signup-form" spellcheck="false">
            <label id="username-label" for="username">Username:</label><br>
            <input type="text" id="username" name="username" required oninput="validateSignupFields()"><br>
            <label id="password-label" for="password">Password:</label><br>
            <input type="password" id="password" name="password" required oninput="validateSignupFields()"><br>
            <label id="confirm-password-label" for="confirm-password">Confirm Password:</label><br>
            <input type="password" id="confirm-password" name="confirm-password" required
                oninput="validateSignupFields()"><br>
            <input type="submit" id="signup-submit" value="Sign up">
        </form>
    </div>
    <script>
        var password = document.getElementById('password');
        var submitButton = document.getElementById('signup-submit');
        if (password.value.length == 0) {
            submitButton.disabled = true;
        }

        document.getElementById('signup-form').addEventListener('submit', function (e) {
            e.preventDefault();

            fetch('/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    username: document.getElementById('username').value,
                    password: document.getElementById('password').value,
                }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(response.statusText);
                    }
                    return response.json();
                })
                .then(data => {
                    // Handle successful sign up (e.g., redirect to login page, show success message, etc.).
                })
                .catch(error => {
                    // Insert the error message into the "error-message" div.
                    document.getElementById('error-message').innerText = error.message;
                });
        });
    </script>
</body>

</html>